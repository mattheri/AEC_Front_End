{"version":3,"sources":["components/fetch.js","components/CustomForm.js","components/Input.js","components/Connexion.js","components/Context.js","components/CardPlaceholder.js","components/Lyrics.js","components/Portal.js","components/Player.js","components/List.js","components/TrackList.js","components/Results.js","components/AlbumCard.js","components/AlbumContainer.js","components/Catalogue.js","components/CustomNavbar.js","components/Search.js","components/useSearch.js","components/CatalogueContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["attempts","fetchData","url","stateToUpdate","property","a","state","setState","setTimeout","fetch","headers","f","json","prev","Object","assign","e","console","error","CustomForm","props","handleChange","newvalue","id","split","stateProperty","keys","filter","defineProperty","value","writable","updateProperty","children","React","Children","map","child","cloneElement","onChange","Form","Input","noLabel","Label","className","labelClassName","htmlFor","label","Control","type","name","placeholder","currentTarget","autoComplete","Connexion","useState","email","password","credentials","setCredentials","handleConnexion","setUser","i","users","storedCredentials","entries","status","isConnected","Container","as","fluid","Button","onClick","appContext","createContext","ContextProvider","context","setContext","Provider","CardPlaceholder","Card","style","width","height","Lyrics","lyrics","setLyrics","message","setMessage","useContext","load","useEffect","uri","data","loadedTrack","title","content","info","artist","includes","key","Math","random","Portal","mount","document","getElementById","el","createElement","appendChild","removeChild","createPortal","Player","src","setSrc","length","controls","autoPlay","List","track","ListGroup","Item","variant","href","link","preview","TrackList","tracksData","setTrackData","user","hasOwnProperty","loadedAlbum","tracklist","Fragment","backgroundImage","cover_xl","module","Suspense","fallback","trackData","Results","searchResults","setSearchResults","results","handleHover","classList","toggle","handleClick","query","top","artists","onMouseEnter","onMouseLeave","albums","album","tracks","AlbumCard","albumData","setAlbumData","cover","Img","Body","Title","Text","AlbumContainer","entry","Col","xs","md","lg","handler","Catalogue","ref","useRef","current","clientHeight","offsetTop","window","addEventListener","Row","previewOn","previewSrc","CustomNavbar","forwardRef","Nav","navLink1","navLink2","innerText","toLowerCase","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Link","Search","searchAlbums","forEach","p","push","t","splice","indexOf","searchTracks","d","searchArtist","Promise","all","useSearch","CatalogueContainer","music","fetchAll","undefined","App","setMusic","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6a2ac70e.chunk.js","sourcesContent":["let attempts = 0;\r\n\r\n\r\n/**********************************************\r\nWill throttle calls to a maximum of 2/seconds*/\r\nconst fetchData = async (url, stateToUpdate, property) => {\r\n    let [state, setState] = stateToUpdate;\r\n    if (attempts > 0 && attempts < 10) {\r\n        setTimeout(async () => {\r\n            const f = await fetch(`https://cors-anywhere.herokuapp.com/${url}`, {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            if (property) state[property] = await f.json();\r\n            if (!property) state = await f.json();\r\n\r\n            try {\r\n                setState(prev => {\r\n                    return Object.assign({}, prev, state);\r\n                });\r\n            } catch (e) {\r\n                console.error(e);\r\n            };\r\n        }, 500);\r\n\r\n        attempts++;\r\n    }\r\n\r\n    if (attempts >= 10) {\r\n        setTimeout(() => {\r\n            attempts = 0;\r\n            return;\r\n        }, 500);\r\n    }\r\n    \r\n    if (!attempts) {\r\n        const f = await fetch(`https://cors-anywhere.herokuapp.com/${url}`, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        });\r\n        if (property) state[property] = await f.json();\r\n        if (!property) state = await f.json();\r\n\r\n        try {\r\n            setState(prev => {\r\n                return Object.assign({}, prev, state);\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        };\r\n\r\n        attempts++;\r\n    }\r\n};\r\n\r\nexport default fetchData;","import React from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport const CustomForm = (props) => {\r\n\r\n    const [state, setState] = props.state;\r\n\r\n    const updateProperty = (newvalue, property, state) => {\r\n        const stateProperty = Object.keys(state).filter(f => f === property)[0];\r\n        const updatedState = Object.defineProperty(state, stateProperty, { value: newvalue, writable: false });\r\n        return updatedState;\r\n    };\r\n\r\n    const handleChange = (newvalue, id) => {\r\n        const property = id.split(\"-\")[1];\r\n        setState(Object.assign({}, state, updateProperty(newvalue, property, state)));\r\n    };\r\n\r\n    const children = React.Children.map(props.children, child => React.cloneElement(child, { onChange: handleChange }));\r\n\r\n    return (\r\n        <Form>\r\n            {children}\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport const Input = (props) => {\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.currentTarget.value;\r\n        const id = e.currentTarget.id;\r\n        props.onChange(value, id);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!props.noLabel && <Form.Label className={props.labelClassName} htmlFor={props.id}>{props.label}</Form.Label>}\r\n            <Form.Control\r\n                type={props.type || \"text\"}\r\n                name={props.id}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={handleChange}\r\n                value={props.value}\r\n                autoComplete={props.autoComplete}\r\n                className={props.className}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CustomForm } from './CustomForm';\r\nimport { Input } from './Input';\r\n\r\nexport const Connexion = (props) => {\r\n\r\n    const [credentials, setCredentials] = React.useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const handleConnexion = async () => {\r\n        const [user, setUser] = props.state;\r\n        const users = await import(\"./credentials\");\r\n        const storedCredentials = Object.entries(users)[0][1];\r\n        for (let i in storedCredentials) {\r\n            if (storedCredentials[i].email === credentials.email && storedCredentials[i].password === credentials.password) {\r\n                const status = { isConnected: true };\r\n                setUser(prev => Object.assign({}, prev, status));\r\n            };\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Container as=\"section\" fluid>\r\n            <Container>\r\n                <Container className=\"d-flex flex-column align-items-center justify-content-center py-5\">\r\n                    <i className=\"fas fa-head-side-headphones px-3 text-white connexion-logo p-3\"></i>\r\n                    <h1 className=\"text-white\">Sneezer</h1>\r\n                </Container>\r\n                <CustomForm state={[credentials, setCredentials]}>\r\n                    <Input labelClassName=\"text-white-50\" className=\"mb-3\" type=\"email\" id=\"connexion-email\" label=\"Email\" placeholder=\"exemple@exemple.com\" autoComplete={\"username\"} />\r\n                    <Input labelClassName=\"text-white-50\" type=\"password\" id=\"connexion-password\" label=\"Password\" autoComplete={\"current-password\"} />\r\n                    <Button className=\"my-3\" onClick={handleConnexion}>Connexion</Button>\r\n                </CustomForm>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const appContext = React.createContext({});\r\n\r\nexport const ContextProvider = (props) => {\r\n\r\n    let [context, setContext] = React.useState({});\r\n\r\n    return (\r\n        <appContext.Provider value={[context, setContext]}>\r\n            {props.children}\r\n        </appContext.Provider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport const CardPlaceholder = (props) => {\r\n    return (\r\n        <Card className=\"card-placeholder\" style={{ width: \"18rem\", height: \"20rem\" }}>\r\n            <div className=\"placeholder-animation\"></div>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport fetchData from \"./fetch\";\r\nimport { appContext } from './Context';\r\n\r\nexport const Lyrics = (props) => {\r\n\r\n    let [lyrics, setLyrics] = React.useState();\r\n    const [message, setMessage] = React.useState(\"Loading lyrics...\");\r\n    const [context, setContext] = React.useContext(appContext);\r\n    let load = true;\r\n\r\n    React.useEffect(() => {\r\n        const uri = `https://api.canarado.xyz/lyrics/${context.data.loadedTrack.title}`;\r\n        fetchData(uri, [lyrics, setLyrics]);\r\n        setMessage(\"Loading lyrics...\");\r\n        setTimeout(() => {\r\n            setMessage(\"Couldn't find the lyrics :(\");\r\n            load = false;\r\n        }, 10000);\r\n    }, [context.data.loadedTrack]);\r\n\r\n    return (\r\n        <section>\r\n            {lyrics &&\r\n                lyrics.content.map((info, i) => {\r\n                    if (info.artist.includes(context.data.loadedTrack.artist.name) && info.title.includes(context.data.loadedTrack.title)) {\r\n                        load = false;\r\n                        return <p key={i * Math.random() + 100} className=\"text-white text-center py-5\">{info.lyrics}</p>\r\n                    }\r\n                })\r\n            }\r\n            {load && <p className=\"text-white text-center py-5\">{message}</p>}\r\n        </section>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { createPortal } from \"react-dom\";\r\n\r\nexport const Portal = (props) => {\r\n    const mount = document.getElementById(props.id || \"portal-root\");\r\n    const el = document.createElement(\"div\");\r\n\r\n    React.useEffect(() => {\r\n        mount.appendChild(el);\r\n        return () => mount.removeChild(el);\r\n    }, [el, mount]);\r\n\r\n    return createPortal(props.children, el);\r\n}\r\n","import React from 'react';\r\n\r\nexport const Player = (props) => {\r\n\r\n    const [src, setSrc] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        if (src !== props.src) setSrc(props.src);\r\n    }, [props.src, src]);\r\n\r\n    return (\r\n        <div className=\"audio\">\r\n            {src.length > 0 && <audio src={src} controls autoPlay />}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { Portal } from \"./Portal\";\r\nimport { Player } from './Player';\r\nimport { appContext } from './Context';\r\n\r\nexport const List = (props) => {\r\n\r\n    const handleClick = (data) => {\r\n        props.onClick(data);\r\n    }\r\n\r\n    let [context, setContext] = React.useContext(appContext);\r\n\r\n    const handlePreview = (src) => {\r\n        context[\"previewSrc\"] = src;\r\n        context[\"previewOn\"] = true;\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.data.map((track, i) => {\r\n                return  <ListGroup.Item key={i * (Math.random() * 100)} className=\"track-item\" variant=\"flush\" href={track.link}>\r\n                            <a onClick={() => handleClick(track)} className=\"text-white px-2\">{track.title}</a>\r\n                            {/* <a href={track.preview} target=\"_blank\" className=\"px-2 text-white-50\">Preview</a> */}\r\n                            <a onClick={() => handlePreview(track.preview)} className=\"px-2 text-white-50\">Preview</a>\r\n                        </ListGroup.Item>\r\n            })}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport fetchData from \"./fetch\";\r\nimport { CardPlaceholder } from './CardPlaceholder';\r\nimport { Lyrics } from './Lyrics';\r\nimport { List } from './List';\r\nimport { appContext } from './Context';\r\n\r\nexport const TrackList = (props) => {\r\n\r\n    let [tracksData, setTrackData] = React.useState();\r\n    let [user, setUser] = props.data[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n    React.useEffect(() => {\r\n        if (context.hasOwnProperty(context.data.loadedAlbum.title)) {\r\n            tracksData = context[context.data.loadedAlbum.title];\r\n            setTrackData(prev => (Object.assign({}, prev, tracksData)));\r\n        } else {\r\n            fetchData(context.data.loadedAlbum.tracklist, [tracksData, setTrackData]);\r\n        }\r\n    }, [context.data.loadedAlbum]);\r\n\r\n    const handleClick = (trackData) => {\r\n        context.data[\"loadedTrack\"] = trackData;\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n        user.module = \"track\";\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"album-cover-image d-flex flex-column justify-content-center align-items-center\" style={{ backgroundImage: `url(\"${context.data.loadedAlbum.cover_xl}\")` }}>\r\n                <h1 className=\"text-white\">{context.data.loadedAlbum.title}</h1>\r\n                {user.module === \"track\" && <h4 className=\"text-white\">{context.data.loadedTrack && context.data.loadedTrack.title}</h4>}\r\n            </section>\r\n            <Container className=\"d-flex justify-content-center track-list\" fluid=\"sm\">\r\n                {user.module === \"album\" ?\r\n                    <ListGroup className=\"w-100 py-8\">\r\n                        <React.Suspense fallback={<CardPlaceholder />}>\r\n                            {tracksData && <List data={tracksData.data} onClick={handleClick} />}\r\n                        </React.Suspense>\r\n                    </ListGroup>\r\n\r\n                    : <Lyrics />\r\n                }\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { appContext } from './Context';\r\n\r\nexport const Results = (props) => {\r\n    let [searchResults, setSearchResults] = props.state[0];\r\n    let [user, setUser] = props.state[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n    let results = searchResults.results;\r\n\r\n    const handleHover = (e) => {\r\n        e.currentTarget.classList.toggle(\"active\");\r\n    }\r\n\r\n    const handleClick = (e, data) => {\r\n        searchResults.query = \"\";\r\n        setSearchResults(prev => (Object.assign({}, prev, searchResults)));\r\n        if (e.currentTarget.id === \"album\" || e.currentTarget.id === \"artist\") {\r\n            context.data[\"loadedAlbum\"] = data[1];\r\n            user.module = \"album\";\r\n        }\r\n        if (e.currentTarget.id === \"track\") {\r\n            context.data[\"loadedAlbum\"] = data[1][0];\r\n            context.data[\"loadedTrack\"] = data[0];\r\n            user.module = \"track\";\r\n        }\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"search-results\" fluid style={{ top: `${props.top ? props.top : \"0\"}px`, height: `${props.height ? props.height : \"0\"}px`}}>\r\n            <Container>\r\n                <ListGroup>\r\n                    {results.artists.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-white text-center\">Artists</h1>\r\n                            {results.artists.map((artist, i) => {\r\n                                return <ListGroup.Item id=\"artist\" onClick={(e) => handleClick(e, [artist[0], artist[1][0]])} onMouseEnter={handleHover} onMouseLeave={handleHover} key={i * Math.random() + (Math.random() * i)} as=\"a\" className=\"d-flex result-list-item\">{artist[0]}</ListGroup.Item>\r\n                            })}\r\n                        </React.Fragment>\r\n                    }\r\n                    {results.albums.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-white text-center\">Albums</h1>\r\n                                {results.albums.map((album, i) => {\r\n                                    if (album[0] !== \"data\" && album[0] !== \"total\" && album[0] !== \"loadedalbum\") {\r\n                                        return <ListGroup.Item\r\n                                            onMouseEnter={handleHover}\r\n                                            onMouseLeave={handleHover}\r\n                                            key={i * Math.random() + (Math.random() * i)}\r\n                                            as=\"a\"\r\n                                            id=\"album\"\r\n                                            onClick={(e) => handleClick(e, [album[0], album[1]])}\r\n                                            className=\"d-flex result-list-item\">{album[0]}\r\n                                                    <p key={i * Math.random() + (Math.random() * i)} className=\"text-black-50 pl-3\">{album[1].artist.name}</p>\r\n                                                </ListGroup.Item>   \r\n                                }\r\n                            })}\r\n                        </React.Fragment>\r\n                    }\r\n                    {results.tracks.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-white text-center\">Tracks</h1>\r\n                            {results.tracks.map((track, i) => {\r\n                                return <ListGroup.Item\r\n                                    onMouseEnter={handleHover}\r\n                                    onMouseLeave={handleHover}\r\n                                    key={i * Math.random() + (Math.random() * i)}\r\n                                    as=\"a\"\r\n                                    id=\"track\"\r\n                                    className=\"d-flex result-list-item\"\r\n                                    onClick={(e) => handleClick(e, [track[1], track[2]])}>{track[0]}\r\n                                            <p key={i * Math.random() + (Math.random() * i)} className=\"text-black-50 pl-3\">{`Album: ${track[2][0].title}`}</p>\r\n                                            <p key={i * Math.random() + (Math.random() * i)} className=\"text-black-50 pl-3\">{`Artist: ${track[1].artist.name}`}</p>\r\n                                        </ListGroup.Item>\r\n                            })}\r\n                        </React.Fragment>\r\n                    }\r\n                </ListGroup>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport const AlbumCard = (props) => {\r\n\r\n    let [albumData, setAlbumData] = React.useState({});\r\n\r\n    const { id, title, link, cover, cover_xl, tracklist, artist } = props.props;\r\n\r\n    React.useEffect(() => {\r\n        albumData = props.props;\r\n        setAlbumData((prev) => (Object.assign({}, prev, albumData)));\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        props.onClick(props.props);\r\n    };\r\n\r\n    const handleHover = (e) => {\r\n        e.currentTarget.classList.toggle(\"album-hover\");\r\n    }\r\n    \r\n    return (\r\n        <React.Suspense>\r\n            {props && <Card style={{ width: \"18rem\" }} onMouseEnter={handleHover} onMouseLeave={handleHover} className=\"bg-black album\" onClick={handleClick}>\r\n                <Card.Img variant=\"top\" src={cover} />\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-white\">{title}</Card.Title>\r\n                    <Card.Text className=\"text-white\">{artist.name}</Card.Text>\r\n                </Card.Body>\r\n            </Card>}\r\n        </React.Suspense>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { AlbumCard } from './AlbumCard';\r\n\r\nexport const AlbumContainer = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.data &&\r\n                props.data.map((entry, i) => {\r\n                    return  <React.Suspense key={i * Math.random() + 100}>\r\n                                <Col className=\"d-flex justify-content-center align-items-center py-3\" key={i * Math.random() + 100} xs={12} md={6} lg={3}>\r\n                                    <AlbumCard key={i * Math.random() + 100} props={entry} onClick={props.handler} />\r\n                                </Col>\r\n                            </React.Suspense>\r\n            })}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { TrackList } from './TrackList';\r\nimport { appContext } from './Context';\r\nimport { Portal } from './Portal';\r\nimport { Results } from './Results';\r\nimport { AlbumContainer } from \"./AlbumContainer\";\r\nimport { Player } from \"./Player\";\r\n\r\nexport const Catalogue = (props) => {\r\n\r\n    let [user, setUser] = props.state[0];\r\n    let [searchResults, setSearchResults] = props.state[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n    const ref = React.useRef();\r\n    let height = 0;\r\n    let top = 0;\r\n    let currentNavRef;\r\n\r\n    const handleLoadAlbumData = (data) => {\r\n        context.data[\"loadedAlbum\"] = data;\r\n        user.module = \"album\";\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        height = ref.current.clientHeight;\r\n        top = ref.current.offsetTop;\r\n    \r\n        window.addEventListener(\"resize\", function () {\r\n            height = ref.current.clientHeight;\r\n            top = ref.current.offsetTop;\r\n        });\r\n\r\n        //if (navRef.current !== currentNavRef) currentNavRef = navRef.current;\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"position-relative\" ref={ref} fluid>\r\n                {user.module === \"catalogue\" && \r\n                    <React.Suspense>\r\n                        <Row>\r\n                            <AlbumContainer data={context.data} handler={handleLoadAlbumData} />\r\n                        </Row>\r\n                    </React.Suspense>\r\n                }\r\n                {user.module !== \"catalogue\" &&\r\n                    <React.Suspense>\r\n                        <Row>\r\n                            <TrackList data={[context.loadedAlbum, [user, setUser]]} /> \r\n                        </Row>\r\n                    </React.Suspense>\r\n                }\r\n                {searchResults.query.length > 0 &&\r\n                    <Portal>\r\n                        {searchResults.results &&\r\n                            <Results\r\n                                state={[[searchResults, setSearchResults], [user, setUser]]}\r\n                                top={ref.current && ref.current.offsetTop}\r\n                                height={ref.current && ref.current.clientHeight} />    \r\n                        }\r\n                    </Portal>  \r\n                }\r\n            </Container>\r\n            {context.previewOn &&\r\n                <Player src={context.previewSrc} />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const CustomNavbar = React.forwardRef((props, ref) => {\r\n\r\n    const children = React.Children.map(props.children, (child) => {\r\n        return <Nav.Item className=\"px-2\">{child}</Nav.Item>\r\n    });\r\n\r\n    let [user, setUser] = props.state;\r\n\r\n    let navLink1 = false;\r\n    let navLink2 = false;\r\n\r\n    switch (user.module) {\r\n        case \"album\":\r\n            navLink1 = \"Catalogue\";\r\n            navLink2 = false;\r\n            break;\r\n        case \"track\":\r\n            navLink1 = \"Catalogue\";\r\n            navLink2 = \"Album\";\r\n            break;\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        const value = e.currentTarget.innerText.toLowerCase();\r\n        user.module = value;\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                <Navbar.Brand className=\"text-white\">\r\n                    <i className=\"fas fa-head-side-headphones px-3 text-white\"></i>\r\n                    Sneezer\r\n                    </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" ref={ref}>\r\n                    <Nav className=\"mr-auto\">\r\n                        {user.module !== \"catalogue\" &&\r\n                            <>\r\n                                {navLink1.length && <Nav.Link className=\"text-white-50\" onClick={handleClick}>{navLink1}</Nav.Link>}\r\n                                {navLink2.length && <Nav.Link className=\"text-white-50\" onClick={handleClick}>{navLink2}</Nav.Link>}\r\n                            </>\r\n                        }\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {children}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { CustomForm } from './CustomForm';\r\nimport { Input } from './Input';\r\nimport { useSearch } from './useSearch';\r\n\r\nexport const Search = (props) => {\r\n\r\n    const results = useSearch(props.value);\r\n    let [searchResults, setSearchResults] = props.state;\r\n\r\n    React.useEffect(() => {\r\n        searchResults[\"results\"] = results;\r\n        setSearchResults(prev => (Object.assign({}, prev, searchResults)));\r\n    }, [props.value]);\r\n\r\n    return (\r\n        <CustomForm state={props.state}>\r\n            <Input\r\n                placeholder=\"Try typing your favorite artist...\"\r\n                id=\"navbar-query\"\r\n                autoComplete=\"off\"\r\n                noLabel\r\n                value={props.value} />\r\n        </CustomForm>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { appContext } from './Context';\r\n\r\nexport const useSearch = (query) => {\r\n\r\n    const [context, setContext] = React.useContext(appContext);\r\n    let results = {\r\n        albums: [],\r\n        tracks: [],\r\n        artists: []\r\n    }\r\n\r\n    if (query.length) {\r\n        query = query.toLowerCase();\r\n        const searchAlbums = async () => {\r\n            const albums = Object.keys(context);\r\n            albums.forEach(p => {\r\n                let title = p.toLowerCase();\r\n                let data = [title, context.data.filter(a => a.title === p)[0]];\r\n                if (title.includes(query)) {\r\n                    results.albums.push(data);\r\n                };\r\n                if (!title.includes(query) && results.albums.filter(t => t[0] === title).length) {\r\n                    results.albums.splice(results.albums.indexOf(data), 1)\r\n                }\r\n            })\r\n        }\r\n\r\n        const searchTracks = async () => {\r\n            const dataTracks = Object.entries(context);\r\n            dataTracks.forEach(d => {\r\n                if (d[0] !== \"data\" && d[0] !== \"total\" && d[0] !== \"loadedAlbum\" && d[0] !== \"previewSrc\" && d[0] !== \"previewOn\") {\r\n                    d[1].data.forEach(p => {\r\n                        let title = p.title.toLowerCase();\r\n                        let data = [title, p, context.data.filter(t => t.title === d[0])]\r\n                        if (title.includes(query)) {\r\n                            results.tracks.push(data);\r\n                        };\r\n                        if (!title.includes(query) && results.tracks.filter(t => t[0] === title).length) {\r\n                            results.tracks.splice(results.tracks.indexOf(data), 1);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        const searchArtist = async () => {\r\n            const data = context.data;\r\n            data.forEach(p => {\r\n                p = p.artist.name.toLowerCase();\r\n                let data = [p, context.data.filter(t => t.artist.name.toLowerCase() === p)];\r\n                if (p.includes(query)) {\r\n                    results.artists.push(data);\r\n                };\r\n                if (!p.includes(query) && results.artists.filter(t => t[0] === data[0]).length) {\r\n                    results.artists.splice(results.artists.indexOf(data), 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        Promise.all([searchAlbums(), searchArtist(), searchTracks()]);\r\n    }\r\n\r\n    return results;\r\n};","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport fetchData from \"./fetch\";\r\nimport { Catalogue } from './Catalogue';\r\nimport { appContext } from './Context';\r\nimport { CustomNavbar } from './CustomNavbar';\r\nimport { Search } from './Search';\r\n\r\nexport const CatalogueContainer = (props) => {\r\n\r\n    let [searchResults, setSearchResults] = React.useState({ query: \"\" });\r\n    let [user, setUser] = props.state[0];\r\n    let [music, setMusic] = props.state[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n\r\n    const handleDeconnexion = () => {\r\n        setUser({ isConnected: false, module: \"catalogue\" });\r\n    };\r\n\r\n    const fetchAll = async () => {\r\n        context.data.forEach(album => {\r\n            fetchData(album.tracklist, [context, setContext], album.title);\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        context = music.albums;\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n\r\n        if (context !== undefined && context.hasOwnProperty(\"data\")) fetchAll();\r\n    }, [music]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomNavbar state={[user, setUser]}>\r\n                <Search state={[searchResults, setSearchResults]} value={searchResults && searchResults.query} />\r\n                <Button className=\"py-1\" variant=\"danger\" onClick={handleDeconnexion}>Deconnexion</Button>\r\n            </CustomNavbar>\r\n            <Catalogue state={[[user, setUser], [searchResults, setSearchResults]]} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\nimport fetchData from \"./fetch\";\nimport { Connexion } from './Connexion';\nimport { ContextProvider } from \"./Context\";\nimport { CatalogueContainer } from \"./CatalogueContainer\";\n\nfunction App() {\n\n  const [user, setUser] = React.useState({\n    isConnected: false,\n    module: \"catalogue\"\n  });\n  let [music, setMusic] = React.useState({});\n\n  React.useEffect(() => {\n    fetchData(\"https://api.deezer.com/chart/0\", [music, setMusic]);\n  }, []);\n\n  return (\n    <ContextProvider>\n      <div className=\"App\">\n        {!user.isConnected && <Connexion state={[user, setUser]} />}\n        {user.isConnected && <CatalogueContainer state={[[user, setUser], [music, setMusic]]} />}\n      </div>\n    </ContextProvider>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}