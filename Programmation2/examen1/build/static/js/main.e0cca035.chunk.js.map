{"version":3,"sources":["components/fetch.js","components/CustomForm.js","components/Input.js","components/Connexion.js","components/Context.js","components/CardPlaceholder.js","components/Lyrics.js","components/List.js","components/TrackList.js","components/Portal.js","components/Results.js","components/AlbumCard.js","components/AlbumContainer.js","components/Catalogue.js","components/CustomNavbar.js","components/Search.js","components/useSearch.js","components/CatalogueContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["attempts","fetchData","url","stateToUpdate","property","a","state","setState","setTimeout","fetch","headers","f","json","prev","Object","assign","e","console","error","CustomForm","props","handleChange","newvalue","id","split","stateProperty","keys","filter","defineProperty","value","writable","updateProperty","children","React","Children","map","child","cloneElement","onChange","Form","Input","noLabel","Label","className","labelClassName","htmlFor","label","Control","type","name","placeholder","currentTarget","autoComplete","Connexion","useState","email","password","credentials","setCredentials","handleConnexion","setUser","i","users","storedCredentials","entries","status","isConnected","Container","as","fluid","Button","onClick","appContext","createContext","ContextProvider","context","setContext","Provider","CardPlaceholder","Card","style","width","height","Lyrics","lyrics","setLyrics","message","setMessage","useContext","load","useEffect","uri","data","loadedTrack","title","content","info","artist","includes","key","Math","random","List","track","ListGroup","Item","variant","href","link","preview","target","TrackList","tracksData","setTrackData","user","hasOwnProperty","loadedAlbum","tracklist","Fragment","backgroundImage","cover_xl","module","Suspense","fallback","trackData","Portal","mount","document","getElementById","el","createElement","appendChild","removeChild","createPortal","Results","searchResults","setSearchResults","results","handleHover","classList","toggle","handleClick","query","top","artists","length","onMouseEnter","onMouseLeave","albums","album","tracks","AlbumCard","albumData","setAlbumData","cover","Img","src","Body","Title","Text","AlbumContainer","entry","Col","xs","md","lg","handler","Catalogue","ref","useRef","current","clientHeight","offsetTop","window","addEventListener","Row","CustomNavbar","forwardRef","Nav","navLink1","navLink2","innerText","toLowerCase","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Link","Search","searchAlbums","forEach","p","push","t","splice","indexOf","searchTracks","d","searchArtist","Promise","all","useSearch","CatalogueContainer","music","fetchAll","undefined","App","setMusic","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e0cca035.chunk.js","sourcesContent":["let attempts = 0;\r\n\r\n\r\n/**********************************************\r\nWill throttle calls to a maximum of 2/seconds*/\r\nconst fetchData = async (url, stateToUpdate, property) => {\r\n    let [state, setState] = stateToUpdate;\r\n    if (attempts > 0 && attempts < 10) {\r\n        setTimeout(async () => {\r\n            const f = await fetch(`https://cors-anywhere.herokuapp.com/${url}`, {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            if (property) state[property] = await f.json();\r\n            if (!property) state = await f.json();\r\n\r\n            try {\r\n                setState(prev => {\r\n                    return Object.assign({}, prev, state);\r\n                });\r\n            } catch (e) {\r\n                console.error(e);\r\n            };\r\n        }, 500);\r\n\r\n        attempts++;\r\n    }\r\n\r\n    if (attempts >= 10) {\r\n        setTimeout(() => {\r\n            attempts = 0;\r\n            return;\r\n        }, 500);\r\n    }\r\n    \r\n    if (!attempts) {\r\n        const f = await fetch(`https://cors-anywhere.herokuapp.com/${url}`, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        });\r\n        if (property) state[property] = await f.json();\r\n        if (!property) state = await f.json();\r\n\r\n        try {\r\n            setState(prev => {\r\n                return Object.assign({}, prev, state);\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        };\r\n\r\n        attempts++;\r\n    }\r\n};\r\n\r\nexport default fetchData;","import React from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport const CustomForm = (props) => {\r\n\r\n    const [state, setState] = props.state;\r\n\r\n    const updateProperty = (newvalue, property, state) => {\r\n        const stateProperty = Object.keys(state).filter(f => f === property)[0];\r\n        const updatedState = Object.defineProperty(state, stateProperty, { value: newvalue, writable: false });\r\n        return updatedState;\r\n    };\r\n\r\n    const handleChange = (newvalue, id) => {\r\n        const property = id.split(\"-\")[1];\r\n        setState(Object.assign({}, state, updateProperty(newvalue, property, state)));\r\n    };\r\n\r\n    const children = React.Children.map(props.children, child => React.cloneElement(child, { onChange: handleChange }));\r\n\r\n    return (\r\n        <Form>\r\n            {children}\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport const Input = (props) => {\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.currentTarget.value;\r\n        const id = e.currentTarget.id;\r\n        props.onChange(value, id);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!props.noLabel && <Form.Label className={props.labelClassName} htmlFor={props.id}>{props.label}</Form.Label>}\r\n            <Form.Control\r\n                type={props.type || \"text\"}\r\n                name={props.id}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={handleChange}\r\n                value={props.value}\r\n                autoComplete={props.autoComplete}\r\n                className={props.className}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CustomForm } from './CustomForm';\r\nimport { Input } from './Input';\r\n\r\nexport const Connexion = (props) => {\r\n\r\n    const [credentials, setCredentials] = React.useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const handleConnexion = async () => {\r\n        const [user, setUser] = props.state;\r\n        const users = await import(\"./credentials\");\r\n        const storedCredentials = Object.entries(users)[0][1];\r\n        for (let i in storedCredentials) {\r\n            if (storedCredentials[i].email === credentials.email && storedCredentials[i].password === credentials.password) {\r\n                const status = { isConnected: true };\r\n                setUser(prev => Object.assign({}, prev, status));\r\n            };\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Container as=\"section\" fluid>\r\n            <Container>\r\n                <Container className=\"d-flex flex-column align-items-center justify-content-center py-5\">\r\n                    <i className=\"fas fa-head-side-headphones px-3 text-white connexion-logo p-3\"></i>\r\n                    <h1 className=\"text-white\">Sneezer</h1>\r\n                </Container>\r\n                <CustomForm state={[credentials, setCredentials]}>\r\n                    <Input labelClassName=\"text-white-50\" className=\"mb-3\" type=\"email\" id=\"connexion-email\" label=\"Email\" placeholder=\"exemple@exemple.com\" autoComplete={\"username\"} />\r\n                    <Input labelClassName=\"text-white-50\" type=\"password\" id=\"connexion-password\" label=\"Password\" autoComplete={\"current-password\"} />\r\n                    <Button className=\"my-3\" onClick={handleConnexion}>Connexion</Button>\r\n                </CustomForm>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const appContext = React.createContext({});\r\n\r\nexport const ContextProvider = (props) => {\r\n\r\n    let [context, setContext] = React.useState({});\r\n\r\n    return (\r\n        <appContext.Provider value={[context, setContext]}>\r\n            {props.children}\r\n        </appContext.Provider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport const CardPlaceholder = (props) => {\r\n    return (\r\n        <Card className=\"card-placeholder\" style={{ width: \"18rem\", height: \"20rem\" }}>\r\n            <div className=\"placeholder-animation\"></div>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport fetchData from \"./fetch\";\r\nimport { appContext } from './Context';\r\n\r\nexport const Lyrics = (props) => {\r\n\r\n    let [lyrics, setLyrics] = React.useState();\r\n    const [message, setMessage] = React.useState(\"Loading lyrics...\");\r\n    const [context, setContext] = React.useContext(appContext);\r\n    let load = true;\r\n\r\n    React.useEffect(() => {\r\n        const uri = `https://api.canarado.xyz/lyrics/${context.data.loadedTrack.title}`;\r\n        fetchData(uri, [lyrics, setLyrics]);\r\n        setMessage(\"Loading lyrics...\");\r\n        setTimeout(() => {\r\n            setMessage(\"Couldn't find the lyrics :(\");\r\n            load = false;\r\n        }, 10000);\r\n    }, [context.data.loadedTrack]);\r\n\r\n    return (\r\n        <section>\r\n            {lyrics &&\r\n                lyrics.content.map((info, i) => {\r\n                    if (info.artist.includes(context.data.loadedTrack.artist.name) && info.title.includes(context.data.loadedTrack.title)) {\r\n                        load = false;\r\n                        return <p key={i * Math.random() + 100} className=\"text-white text-center py-5\">{info.lyrics}</p>\r\n                    }\r\n                })\r\n            }\r\n            {load && <p className=\"text-white text-center py-5\">{message}</p>}\r\n        </section>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nexport const List = (props) => {\r\n\r\n    const handleClick = (data) => {\r\n        props.onClick(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.data.map((track, i) => {\r\n                return  <ListGroup.Item key={i * (Math.random() * 100)} className=\"track-item\" variant=\"flush\" href={track.link}>\r\n                            <a onClick={() => handleClick(track)} className=\"text-white px-2\">{track.title}</a>\r\n                            <a href={track.preview} target=\"_blank\" className=\"px-2 text-white-50\">Preview</a>\r\n                        </ListGroup.Item>\r\n            })}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport fetchData from \"./fetch\";\r\nimport { CardPlaceholder } from './CardPlaceholder';\r\nimport { Lyrics } from './Lyrics';\r\nimport { List } from './List';\r\nimport { appContext } from './Context';\r\n\r\nexport const TrackList = (props) => {\r\n\r\n    let [tracksData, setTrackData] = React.useState();\r\n    let [user, setUser] = props.data[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n    React.useEffect(() => {\r\n        if (context.hasOwnProperty(context.data.loadedAlbum.title)) {\r\n            tracksData = context[context.data.loadedAlbum.title];\r\n            setTrackData(prev => (Object.assign({}, prev, tracksData)));\r\n        } else {\r\n            fetchData(context.data.loadedAlbum.tracklist, [tracksData, setTrackData]);\r\n        }\r\n    }, [context.data.loadedAlbum]);\r\n\r\n    const handleClick = (trackData) => {\r\n        context.data[\"loadedTrack\"] = trackData;\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n        user.module = \"track\";\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"album-cover-image d-flex flex-column justify-content-center align-items-center\" style={{ backgroundImage: `url(\"${context.data.loadedAlbum.cover_xl}\")` }}>\r\n                <h1 className=\"text-white\">{context.data.loadedAlbum.title}</h1>\r\n                {user.module === \"track\" && <h4 className=\"text-white\">{context.data.loadedTrack && context.data.loadedTrack.title}</h4>}\r\n            </section>\r\n            <Container className=\"d-flex justify-content-center track-list\" fluid=\"sm\">\r\n                {user.module === \"album\" ?\r\n                    <ListGroup className=\"w-100 py-5\">\r\n                        <React.Suspense fallback={<CardPlaceholder />}>\r\n                            {tracksData && <List data={tracksData.data} onClick={handleClick} />}\r\n                        </React.Suspense>\r\n                    </ListGroup>\r\n\r\n                    : <Lyrics />\r\n                }\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { createPortal } from \"react-dom\";\r\n\r\nexport const Portal = (props) => {\r\n    const mount = document.getElementById(\"portal-root\");\r\n    const el = document.createElement(\"div\");\r\n\r\n    React.useEffect(() => {\r\n        mount.appendChild(el);\r\n        return () => mount.removeChild(el);\r\n    }, [el, mount]);\r\n\r\n    return createPortal(props.children, el);\r\n}\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { appContext } from './Context';\r\n\r\nexport const Results = (props) => {\r\n    let [searchResults, setSearchResults] = props.state[0];\r\n    let [user, setUser] = props.state[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n    let results = searchResults.results;\r\n\r\n    const handleHover = (e) => {\r\n        e.currentTarget.classList.toggle(\"active\");\r\n    }\r\n\r\n    const handleClick = (e, data) => {\r\n        searchResults.query = \"\";\r\n        setSearchResults(prev => (Object.assign({}, prev, searchResults)));\r\n        if (e.currentTarget.id === \"album\" || e.currentTarget.id === \"artist\") {\r\n            context.data[\"loadedAlbum\"] = data[1];\r\n            user.module = \"album\";\r\n        }\r\n        if (e.currentTarget.id === \"track\") {\r\n            context.data[\"loadedAlbum\"] = data[1][0];\r\n            context.data[\"loadedTrack\"] = data[0];\r\n            user.module = \"track\";\r\n        }\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"search-results\" fluid style={{ top: `${props.top ? props.top : \"0\"}px`, height: `${props.height ? props.height : \"0\"}px`}}>\r\n            <Container>\r\n                <ListGroup>\r\n                    {results.artists.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-white text-center\">Artists</h1>\r\n                            {results.artists.map((artist, i) => {\r\n                                return <ListGroup.Item id=\"artist\" onClick={(e) => handleClick(e, [artist[0], artist[1][0]])} onMouseEnter={handleHover} onMouseLeave={handleHover} key={i * Math.random() + (Math.random() * i)} as=\"a\" className=\"d-flex result-list-item\">{artist[0]}</ListGroup.Item>\r\n                            })}\r\n                        </React.Fragment>\r\n                    }\r\n                    {results.albums.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-white text-center\">Albums</h1>\r\n                                {results.albums.map((album, i) => {\r\n                                    if (album[0] !== \"data\" && album[0] !== \"total\" && album[0] !== \"loadedalbum\") {\r\n                                        return <ListGroup.Item\r\n                                            onMouseEnter={handleHover}\r\n                                            onMouseLeave={handleHover}\r\n                                            key={i * Math.random() + (Math.random() * i)}\r\n                                            as=\"a\"\r\n                                            id=\"album\"\r\n                                            onClick={(e) => handleClick(e, [album[0], album[1]])}\r\n                                            className=\"d-flex result-list-item\">{album[0]}\r\n                                                    <p key={i * Math.random() + (Math.random() * i)} className=\"text-black-50 pl-3\">{album[1].artist.name}</p>\r\n                                                </ListGroup.Item>   \r\n                                }\r\n                            })}\r\n                        </React.Fragment>\r\n                    }\r\n                    {results.tracks.length > 0 &&\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-white text-center\">Tracks</h1>\r\n                            {results.tracks.map((track, i) => {\r\n                                return <ListGroup.Item\r\n                                    onMouseEnter={handleHover}\r\n                                    onMouseLeave={handleHover}\r\n                                    key={i * Math.random() + (Math.random() * i)}\r\n                                    as=\"a\"\r\n                                    id=\"track\"\r\n                                    className=\"d-flex result-list-item\"\r\n                                    onClick={(e) => handleClick(e, [track[1], track[2]])}>{track[0]}\r\n                                            <p key={i * Math.random() + (Math.random() * i)} className=\"text-black-50 pl-3\">{`Album: ${track[2][0].title}`}</p>\r\n                                            <p key={i * Math.random() + (Math.random() * i)} className=\"text-black-50 pl-3\">{`Artist: ${track[1].artist.name}`}</p>\r\n                                        </ListGroup.Item>\r\n                            })}\r\n                        </React.Fragment>\r\n                    }\r\n                </ListGroup>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport const AlbumCard = (props) => {\r\n\r\n    let [albumData, setAlbumData] = React.useState({});\r\n\r\n    const { id, title, link, cover, cover_xl, tracklist, artist } = props.props;\r\n\r\n    React.useEffect(() => {\r\n        albumData = props.props;\r\n        setAlbumData((prev) => (Object.assign({}, prev, albumData)));\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        props.onClick(props.props);\r\n    };\r\n\r\n    const handleHover = (e) => {\r\n        e.currentTarget.classList.toggle(\"album-hover\");\r\n    }\r\n    \r\n    return (\r\n        <React.Suspense>\r\n            {props && <Card style={{ width: \"18rem\" }} onMouseEnter={handleHover} onMouseLeave={handleHover} className=\"bg-black album\" onClick={handleClick}>\r\n                <Card.Img variant=\"top\" src={cover} />\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-white\">{title}</Card.Title>\r\n                    <Card.Text className=\"text-white\">{artist.name}</Card.Text>\r\n                </Card.Body>\r\n            </Card>}\r\n        </React.Suspense>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { AlbumCard } from './AlbumCard';\r\n\r\nexport const AlbumContainer = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.data &&\r\n                props.data.map((entry, i) => {\r\n                    return  <React.Suspense key={i * Math.random() + 100}>\r\n                                <Col className=\"d-flex justify-content-center align-items-center py-3\" key={i * Math.random() + 100} xs={12} md={6} lg={3}>\r\n                                    <AlbumCard key={i * Math.random() + 100} props={entry} onClick={props.handler} />\r\n                                </Col>\r\n                            </React.Suspense>\r\n            })}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { TrackList } from './TrackList';\r\nimport { appContext } from './Context';\r\nimport { Portal } from './Portal';\r\nimport { Results } from './Results';\r\nimport { AlbumContainer } from \"./AlbumContainer\";\r\n\r\nexport const Catalogue = (props) => {\r\n\r\n    let [user, setUser] = props.state[0];\r\n    let [searchResults, setSearchResults] = props.state[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n    const ref = React.useRef();\r\n    let height = 0;\r\n    let top = 0;\r\n    let currentNavRef;\r\n\r\n    const handleLoadAlbumData = (data) => {\r\n        context.data[\"loadedAlbum\"] = data;\r\n        user.module = \"album\";\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        height = ref.current.clientHeight;\r\n        top = ref.current.offsetTop;\r\n    \r\n        window.addEventListener(\"resize\", function () {\r\n            height = ref.current.clientHeight;\r\n            top = ref.current.offsetTop;\r\n        });\r\n\r\n        //if (navRef.current !== currentNavRef) currentNavRef = navRef.current;\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"position-relative\" ref={ref} fluid>\r\n                {user.module === \"catalogue\" && \r\n                    <React.Suspense>\r\n                        <Row>\r\n                            <AlbumContainer data={context.data} handler={handleLoadAlbumData} />\r\n                        </Row>\r\n                    </React.Suspense>\r\n                }\r\n                {user.module !== \"catalogue\" &&\r\n                    <React.Suspense>\r\n                        <Row>\r\n                            <TrackList data={[context.loadedAlbum, [user, setUser]]} /> \r\n                        </Row>\r\n                    </React.Suspense>\r\n                }\r\n                {searchResults.query.length > 0 &&\r\n                    <Portal>\r\n                        {searchResults.results &&\r\n                            <Results\r\n                                state={[[searchResults, setSearchResults], [user, setUser]]}\r\n                                top={ref.current && ref.current.offsetTop}\r\n                                height={ref.current && ref.current.clientHeight} />    \r\n                        }\r\n                    </Portal>  \r\n                }\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const CustomNavbar = React.forwardRef((props, ref) => {\r\n\r\n    const children = React.Children.map(props.children, (child) => {\r\n        return <Nav.Item className=\"px-2\">{child}</Nav.Item>\r\n    });\r\n\r\n    let [user, setUser] = props.state;\r\n\r\n    let navLink1 = false;\r\n    let navLink2 = false;\r\n\r\n    switch (user.module) {\r\n        case \"album\":\r\n            navLink1 = \"Catalogue\";\r\n            navLink2 = false;\r\n            break;\r\n        case \"track\":\r\n            navLink1 = \"Catalogue\";\r\n            navLink2 = \"Album\";\r\n            break;\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        const value = e.currentTarget.innerText.toLowerCase();\r\n        user.module = value;\r\n        setUser(prev => (Object.assign({}, prev, user)));\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                <Navbar.Brand className=\"text-white\">\r\n                    <i className=\"fas fa-head-side-headphones px-3 text-white\"></i>\r\n                    Sneezer\r\n                    </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" ref={ref}>\r\n                    <Nav className=\"mr-auto\">\r\n                        {user.module !== \"catalogue\" &&\r\n                            <>\r\n                                {navLink1.length && <Nav.Link className=\"text-white-50\" onClick={handleClick}>{navLink1}</Nav.Link>}\r\n                                {navLink2.length && <Nav.Link className=\"text-white-50\" onClick={handleClick}>{navLink2}</Nav.Link>}\r\n                            </>\r\n                        }\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {children}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { CustomForm } from './CustomForm';\r\nimport { Input } from './Input';\r\nimport { useSearch } from './useSearch';\r\n\r\nexport const Search = (props) => {\r\n\r\n    const results = useSearch(props.value);\r\n    let [searchResults, setSearchResults] = props.state;\r\n\r\n    React.useEffect(() => {\r\n        searchResults[\"results\"] = results;\r\n        setSearchResults(prev => (Object.assign({}, prev, searchResults)));\r\n    }, [props.value]);\r\n\r\n    return (\r\n        <CustomForm state={props.state}>\r\n            <Input\r\n                placeholder=\"Try typing your favorite artist...\"\r\n                id=\"navbar-query\"\r\n                autoComplete=\"off\"\r\n                noLabel\r\n                value={props.value} />\r\n        </CustomForm>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { appContext } from './Context';\r\n\r\nexport const useSearch = (query) => {\r\n\r\n    const [context, setContext] = React.useContext(appContext);\r\n    let results = {\r\n        albums: [],\r\n        tracks: [],\r\n        artists: []\r\n    }\r\n\r\n    if (query.length) {\r\n        query = query.toLowerCase();\r\n        const searchAlbums = async () => {\r\n            const albums = Object.keys(context);\r\n            albums.forEach(p => {\r\n                let title = p.toLowerCase();\r\n                let data = [title, context.data.filter(a => a.title === p)[0]];\r\n                if (title.includes(query)) {\r\n                    results.albums.push(data);\r\n                };\r\n                if (!title.includes(query) && results.albums.filter(t => t[0] === title).length) {\r\n                    results.albums.splice(results.albums.indexOf(data), 1)\r\n                }\r\n            })\r\n        }\r\n\r\n        const searchTracks = async () => {\r\n            const dataTracks = Object.entries(context);\r\n            dataTracks.forEach(d => {\r\n                if (d[0] !== \"data\" && d[0] !== \"total\" && d[0] !== \"loadedAlbum\") {\r\n                    d[1].data.forEach(p => {\r\n                        let title = p.title.toLowerCase();\r\n                        let data = [title, p, context.data.filter(t => t.title === d[0])]\r\n                        if (title.includes(query)) {\r\n                            results.tracks.push(data);\r\n                        };\r\n                        if (!title.includes(query) && results.tracks.filter(t => t[0] === title).length) {\r\n                            results.tracks.splice(results.tracks.indexOf(data), 1);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        const searchArtist = async () => {\r\n            const data = context.data;\r\n            data.forEach(p => {\r\n                p = p.artist.name.toLowerCase();\r\n                let data = [p, context.data.filter(t => t.artist.name.toLowerCase() === p)];\r\n                if (p.includes(query)) {\r\n                    results.artists.push(data);\r\n                };\r\n                if (!p.includes(query) && results.artists.filter(t => t[0] === data[0]).length) {\r\n                    results.artists.splice(results.artists.indexOf(data), 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        Promise.all([searchAlbums(), searchArtist(), searchTracks()]);\r\n    }\r\n\r\n    return results;\r\n};","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport fetchData from \"./fetch\";\r\nimport { Catalogue } from './Catalogue';\r\nimport { appContext } from './Context';\r\nimport { CustomNavbar } from './CustomNavbar';\r\nimport { Search } from './Search';\r\n\r\nexport const CatalogueContainer = (props) => {\r\n\r\n    let [searchResults, setSearchResults] = React.useState({ query: \"\" });\r\n    let [user, setUser] = props.state[0];\r\n    let [music, setMusic] = props.state[1];\r\n    let [context, setContext] = React.useContext(appContext);\r\n\r\n    const handleDeconnexion = () => {\r\n        setUser({ isConnected: false, module: \"catalogue\" });\r\n    };\r\n\r\n    const fetchAll = async () => {\r\n        context.data.forEach(album => {\r\n            setTimeout(async () => {\r\n                fetchData(album.tracklist, [context, setContext], album.title);\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        context = music.albums;\r\n        setContext(prev => (Object.assign({}, prev, context)));\r\n\r\n        if (context !== undefined && context.hasOwnProperty(\"data\")) fetchAll();\r\n    }, [music]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomNavbar state={[user, setUser]}>\r\n                <Search state={[searchResults, setSearchResults]} value={searchResults && searchResults.query} />\r\n                <Button className=\"py-1\" variant=\"danger\" onClick={handleDeconnexion}>Deconnexion</Button>\r\n            </CustomNavbar>\r\n            <Catalogue state={[[user, setUser], [searchResults, setSearchResults]]} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\nimport fetchData from \"./fetch\";\nimport { Connexion } from './Connexion';\nimport { ContextProvider } from \"./Context\";\nimport { CatalogueContainer } from \"./CatalogueContainer\";\n\nfunction App() {\n\n  const [user, setUser] = React.useState({\n    isConnected: false,\n    module: \"catalogue\"\n  });\n  let [music, setMusic] = React.useState({});\n\n  React.useEffect(() => {\n    fetchData(\"https://api.deezer.com/chart/0\", [music, setMusic]);\n  }, []);\n\n  return (\n    <ContextProvider>\n      <div className=\"App\">\n        {!user.isConnected && <Connexion state={[user, setUser]} />}\n        {user.isConnected && <CatalogueContainer state={[[user, setUser], [music, setMusic]]} />}\n      </div>\n    </ContextProvider>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}